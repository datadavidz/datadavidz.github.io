{
  "hash": "9a8645d5414e6633a4322daf6f5ba153",
  "result": {
    "markdown": "---\ntitle: \"Conventional Material Models for Concrete Dataset\"\ndate: \"2022-09-10\"\n---\n\n::: {.cell}\n\n:::\n\n\nFitting the concrete dataset to a pre-determined equation using a non-linear, least squares approximation.\n\nAbrams' law states that the strength of a concrete mix is inversely related to the mass ratio of water to cement.  In other words, as the water content increases, the strength of the concrete decreases.  Experimental data however shows that this law does not provide the complete picture and concrete formulations with the same water:cement can have significantly different performance.\n\n## Load libraries and data\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\n\ntheme_set(theme_light())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilename <- \"Concrete_Data.xls\"\n\nfolder <- \"../data/\"\nnumberCols <- 9 #total number of columns in spreadsheet\n\ncolTypes <- rep(\"numeric\", numberCols)\nconcrete_tbl <- read_excel(path = paste0(folder, filename), col_types = colTypes)\n\nconcrete_tbl <- concrete_tbl %>%\n  rename(cement = starts_with(\"Cement\")) %>%\n  rename(blast_furnace_slag = starts_with(\"Blast\")) %>%\n  rename(fly_ash = starts_with(\"Fly Ash\")) %>%\n  rename(water = starts_with(\"Water\")) %>%\n  rename(superplasticizer = starts_with(\"Super\")) %>%\n  rename(coarse_aggregate = starts_with(\"Coarse\")) %>%\n  rename(fine_aggregate = starts_with(\"Fine\")) %>%\n  rename(age = starts_with(\"Age\")) %>%\n  rename(compressive_strength = starts_with(\"Concrete\"))\n```\n:::\n\n\n## Plot compressive strength as a function of water:cement\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconcrete_tbl <- concrete_tbl %>%\n  mutate(water_cement = water / cement,\n         water_binder = water / (cement + blast_furnace_slag + fly_ash))\n\nconcrete_tbl %>%\n  ggplot(aes(water_cement, compressive_strength)) +\n  geom_point(alpha = 0.15) +\n  geom_smooth(formula = y ~ x, method = \"lm\") +\n  theme_light() +\n  labs(title = \"Concrete Compressive Strength vs. Water:Cement\",\n       x = \"Water:Cement\", y = \"Compressive Strength (MPa)\")\n```\n\n::: {.cell-output-display}\n![](2022-09-10_ConcreteNLS_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nIt is apparent from the plot above that water:cement is not the only factor important for determining the compressive strength of concrete.  For example, there are multiple formulations with a water:cement of ~1 with a range of compressive strengths from less than 10 MPa to greater than 50 MPa.  The age of the concrete at the time of testing is also recognized as an important factor in determining the concrete strength for a sample.\n\n\n$$ f^\\prime_c(t) = a X^b \\cdot [c \\ln(t)+(d)] $$\n\nwhere t = age at test, X = w/c or water-to-binder ratio and a, b, c, d are regression coefficients\n\nThe above equation also includes the age at test variable (t) to predict the compressive strength.  This equation uses four parameters reminding me of the famous quote by mathematician John von Neumann, \"with four parameters I can fit an elephant, with five I can make him wiggle his trunk.\"\n\nThis equation is fit to the experimental dataset using non-linear least squares approximation.  The nls function in base R has been used as shown below.\n\n## NLS Fit using water:cement\n\n::: {.cell}\n\n```{.r .cell-code}\nwc <- concrete_tbl$water_cement\nwb <- concrete_tbl$water_binder\nage <- concrete_tbl$age\ncs <- concrete_tbl$compressive_strength\n\ncsFunc <- function(wc, age, a, b, c, d) { (a * wc^b) + (c * log(age) + d)}\n```\n:::\n\n\nFit with water:cement\n\n::: {.cell}\n\n```{.r .cell-code}\ncsFit <- nls(cs ~ csFunc(wc, age, a, b, c, d), start=list(a=30, b=-0.6, c=0.3, d=0.1))\n\nsummary(csFit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFormula: cs ~ csFunc(wc, age, a, b, c, d)\n\nParameters:\n  Estimate Std. Error t value Pr(>|t|)    \na  14.0112     2.9035   4.826 1.61e-06 ***\nb  -1.0536     0.1357  -7.763 2.00e-14 ***\nc   8.1770     0.2587  31.608  < 2e-16 ***\nd -12.8289     3.1703  -4.047 5.59e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 9.869 on 1026 degrees of freedom\n\nNumber of iterations to convergence: 7 \nAchieved convergence tolerance: 3.529e-06\n```\n:::\n:::\n\nVisualize actual vs. predicted compressive strength for water:cement model.  \n\n::: {.cell}\n::: {.cell-output-display}\n![](2022-09-10_ConcreteNLS_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### NLS Fit using Water:Binder\n\nFit with water:binder\n\n::: {.cell}\n\n```{.r .cell-code}\ncsFit_wb <- nls(cs ~ csFunc(wb, age, a, b, c, d), start=list(a=10, b=-0.5, c=10, d=10))\n\nsummary(csFit_wb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFormula: cs ~ csFunc(wb, age, a, b, c, d)\n\nParameters:\n  Estimate Std. Error t value Pr(>|t|)    \na  23.5011     6.9342   3.389 0.000728 ***\nb  -0.8614     0.1440  -5.980 3.07e-09 ***\nc   8.5739     0.2043  41.971  < 2e-16 ***\nd -39.2343     8.2396  -4.762 2.20e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.774 on 1026 degrees of freedom\n\nNumber of iterations to convergence: 7 \nAchieved convergence tolerance: 2.226e-06\n```\n:::\n:::\n\nVisualize actual vs. predicted compressive strength for water:binder model.  \n\n::: {.cell}\n::: {.cell-output-display}\n![](2022-09-10_ConcreteNLS_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n## Summary\nThe NLS model using water:binder was a better fit to the experimental data than the NLS model using water:cement.  The R^2^ for the water:binder model was 0.78 compared to an R^2^ of 0.65 for the water:cement model.\n\n\n\n\n\n:::{.callout-tip collapse=\"true\"}\n## Expand for Session Info\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.0 (2022-04-22 ucrt)\n os       Windows 10 x64 (build 19043)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_United States.utf8\n ctype    English_United States.utf8\n tz       America/Chicago\n date     2022-09-02\n pandoc   2.18 @ C:/Program Files/RStudio/bin/quarto/bin/tools/ (via rmarkdown)\n quarto   1.0.36 @ C:\\\\PROGRA~1\\\\RStudio\\\\bin\\\\quarto\\\\bin\\\\quarto.cmd\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package     * version date (UTC) lib source\n P dplyr       * 1.0.10  2022-09-01 [?] CRAN (R 4.2.0)\n P forcats     * 0.5.2   2022-08-19 [?] CRAN (R 4.2.1)\n P ggplot2     * 3.3.6   2022-05-03 [?] CRAN (R 4.2.1)\n P purrr       * 0.3.4   2020-04-17 [?] CRAN (R 4.2.1)\n P readr       * 2.1.2   2022-01-30 [?] CRAN (R 4.2.1)\n P readxl      * 1.4.1   2022-08-17 [?] CRAN (R 4.2.1)\n P sessioninfo * 1.2.2   2021-12-06 [?] CRAN (R 4.2.1)\n P stringr     * 1.4.1   2022-08-20 [?] CRAN (R 4.2.1)\n P tibble      * 3.1.8   2022-07-22 [?] CRAN (R 4.2.1)\n P tidyr       * 1.2.0   2022-02-01 [?] CRAN (R 4.2.1)\n P tidyverse   * 1.3.2   2022-07-18 [?] CRAN (R 4.2.1)\n\n [1] C:/Users/David Zoller/AppData/Local/Temp/RtmpIHRddC/renv-library-22e4303bbb\n [2] C:/Users/David Zoller/Documents/datadavidz.github.io/renv/library/R-4.2/x86_64-w64-mingw32\n [3] C:/Program Files/R/R-4.2.0/library\n\n P ── Loaded and on-disk path mismatch.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n:::",
    "supporting": [
      "2022-09-10_ConcreteNLS_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}